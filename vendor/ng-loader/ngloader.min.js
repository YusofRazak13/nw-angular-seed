;(function (window, angular, undefined){
  "use strict";

  var collection = {};
  var opt = {
    dirs: [{
      named: 'controller',
      url: 'app/controllers'
    },{
      named: 'service',
      url: 'app/services'
    },{
      named: 'directive',
      url: 'app/directives'
    }]
  };

  var reqs = {};
  
  var loadScript = function(named, url){
    return new Promise(function(resolve, reject){
      $.get(url, function(data){
        var funcName, funcArgs, funcBody, func;
        data = data.replace(/^function\s*([^\(]*)\(\s*([^\)]*)\)/m, function(a,b,c){
          funcName = b.trim();
          if( named == "directive" )
            funcName = funcName[0].toLowerCase() + funcName.substring(1);
          funcArgs = c.trim();
          return '';
        });
        funcBody = data.substring(data.indexOf('{')+1, data.lastIndexOf('}')).trim();
        func = new Function(funcArgs, funcBody);
        resolve({
          named: funcName, 
          func: func
        });
      }); 
    });
  };
  
  var loadComponents = function(dirs){
    return new Promise(function(resolve, reject){
      while(dirs.length > 0){
        var comp = dirs.pop();
        $.ajax({
          url: comp.url,
          beforeSend: function(){
            this.comp = comp;
          },
          success: function(html){
            var comp = this.comp;
            html = '<div id="body-mock">' + 
              html.replace(/^[\s\S]*<body.*?>|<\/body>[\s\S]*$/ig, '') +
              '</div>';
            var $body = $(html).find('table tr:nth-of-type(n+4):not(:last-of-type)');
            var $list = $body.find('td:eq(1)').map(function(index){
              return reqs[comp.url + '/' + $('a', this).attr('href')] = 
                comp.url + '/' + $('a', this).attr('href');
            }).toArray();
            collection[comp.named] = [];
            $list.forEach(function(url, i){
              loadScript(comp.named, url).then(function(ret){
                collection[comp.named].push(ret);
                delete reqs[url];
                if( Object.keys(reqs).length == 0 ){
                  resolve(collection);
                }
              });
            });
          }
        });
      }
    });
  }

  window.ngLoader = function(usrOpt){
    opt = $.extend({}, opt, usrOpt);

    loadComponents(opt.dirs).then(function(components){
      if( typeof opt.done === "function" ){
        opt.done(components)
      }
    });
  }

})(window, window.angular);